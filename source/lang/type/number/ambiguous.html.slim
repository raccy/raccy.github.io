---
title: 曖昧な数値型
order: 4
head:
  - key: name
    title: 型/クラス
  - key: int_min
    name: 最小整数
  - key: int_max
    name: 最大整数
  - key:
  - key: literal
    title: リテラル
  - key: library
    title: ライブラリ
  - key: desc
    title: 説明
    wrap: true


list:
  ambiguaus:
    Perl:
      - name:
          content: scalar
          note: scalarに入る三つの型の一つである数値型か数値表現の文字列型です。
      - desc: 内部では符号有り整数、符号無し整数、浮動小数点数、文字列と4つの何れかで保存されます。
    JavaScript:
      - name: Number
---
h2 概要
p 私たちは普段、0と0.0を区別しているでしょうか？+0.0と-0.0の違いを考えることはありますでしょうか？そもそも厳密な整数の計算はある程度大きさまでしか必要としないのではないでしょうか？ある程度大きかったらそこそこの精度で十分じゃないでしょうか？また、5/3を1余り2と答えるのは小学生までだと思っていませんでしょうか？
p そんなことを考えたら、整数とか浮動小数点数とか別々に考えるのがばからしくなってきます。ある程度までは整数で、小数だったり指数が必要なぐらい大きな数なら浮動小数点数ですまそうというのが曖昧な数値型です。「曖昧な数値型」って言っていますが、別に名前があるわけじゃありません。それぞれの言語は、その言語のただ一つの最も正しい数値型の実装だと思い込んでいます。
h2 曖昧な数値型の特徴
p 細かい仕様は言語によって異なりますが、次のような特徴があります。
ul
  li 内部で整数型と浮動小数点数型を自動で切り替えます。
  li 整数で表現できそうな時はだいたい整数になります。
  li 除算で割り切れないときは浮動小数点数になります。
  li 内部での整数表現を越える場合は<strong>勝手に</strong>浮動小数点数に変換します。
  li ビット演算やシフト演算は整数として扱います。
p 厳密な計算や巨大な数値を扱わない場合はだいたい期待通り動きます。しかし、プログラマーが完全に制御するには言語仕様をよく読んでおく必要があり、複雑になります。
h2 その他の言語
p PHPも自動的に浮動小数点数に変わりますが、PHP_INT_MAXという定数や型を判別するための関数が用意されており、切り替わったのかどうかを確認できます。PerlやJavaScriptにそのような者が用意されているかはわかりませんでした。
